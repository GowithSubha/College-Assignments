Assignment 1:
1. Write a C program to print an array.
2. Write a C program to check whether a given string is Palindrome or not.
3. Write a C program to convert temperature from degree Centigrade to Fahrenheit.
4. Write a C program to sort an array.
5. Write a C program to print the largest and second largest element of the array.
6. Write a C program to display Fibonacci series.
7. Write a program that reads two 2D metrices from the console, verifies if metrics multiplication is possible or not. Then multiplies the metrices and prints the 3rd metrics.
8. Write a program that reads a 2D metrics and checks if the metrics is a symmetric metrics or not.
9. Write a C program to print reverse array
10. Write a C program to check the sum of all elements of an array
11. Write a C program to check duplicate number in an array 

Assignment 2:
1. Write a C program to read a 2D array (with most of the elements as 0s) and then represent the same array as Sparse Metrics.
2. Write a C program to pass an array to a function using Call by Value, update the array values in the function, print the array elements both in the function and in the calling function.
3. Write a C program to pass an array to a function using Call by Reference, update the array values in the function, print the array elements both in the function and in the calling function.
4. Write a program to display n number of elements. Memory should be allocated dynamically using malloc( ).
5. Write a program to display n number of elements. Memory should be allocated dynamically using calloc( ).
6. Write a program to allocate memory using malloc( ) and then reallocate the previously allocated memory using realloc( ). Display the elements which have been taken after reallocation.
7. Write a program to allocate memory using calloc( ) and then reallocate the previously allocated memory using realloc( ). Display the elements which have been taken after reallocation.
8. Write a C program to search an element in an Array using dynamic memory allocation.

Assignment 3:
1) Write a Menu driven C program to accomplish the following functionalities in single linked list.
    a) Create a single linked list.
    b) Display the elements of a single linked list.
    c) Insert a node at the beginning of a single linked list.
    d) Insert a node at the end of a single linked list.
    e) Insert a node before a given node of a single linked list.
    f) Insert a node after a given node of a single linked list.
    g) Delete a node from the beginning of a single linked list.
    h) Delete a node from the end of a single linked list.
    i) Delete a node after a given node of a single linked list.
    j) Delete the entire single linked list.

2) Write a Menu driven C program to accomplish the following functionalities in circular linked list.
    a) Create a circular linked list.
    b) Display the elements of a circular linked list.
    c) Insert a node at the beginning of a circular linked list.
    d) Insert a node at the end of a circular linked list.
    e) Delete a node from the beginning of a circular linked list.
    f) Delete a node from the end of a circular linked list.
    g) Delete a node after a given node of a circular linked list.
    h) Delete the entire circular linked list.